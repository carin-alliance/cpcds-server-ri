{
  "resourceType": "Library",
  "id": "library-EXM104-FHIR3-8.1.000",
  "text": {
    "status": "generated",
    "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><table class=\"grid dict\"><tr><th scope=\"row\"><b>Id: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\">library-EXM104-FHIR3-8.1.000</td></tr><tr><th scope=\"row\"><b>Type: </b></th><td style=\"padding-right: 25px;\"> Logic Library </td></tr><tr><th scope=\"row\"><b>Version: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\">8.1.000</td></tr><tr><th scope=\"row\"><b>Status: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\">active</td></tr><tr style=\"vertical-align: top;\"><th rowspan=\"4\" scope=\"row\"><b>Related: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>depends-on</span></p><p style=\"margin-bottom: 5px;\"><b>Resource: </b><br/><span><span style=\"padding-left: 25px;\"><b>reference: </b><span>Library/library-FHIRHelpers-3.0.0</span></span></span></p></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>depends-on</span></p><p style=\"margin-bottom: 5px;\"><b>Resource: </b><br/><span><span style=\"padding-left: 25px;\"><b>reference: </b><span>Library/library-MATGlobalCommonFunctions-FHIR3-4.0.000</span></span></span></p></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>depends-on</span></p><p style=\"margin-bottom: 5px;\"><b>Resource: </b><br/><span><span style=\"padding-left: 25px;\"><b>reference: </b><span>Library/library-TJCOverall-FHIR3-3.6.000</span></span></span></p></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>depends-on</span></p><p style=\"margin-bottom: 5px;\"><b>Resource: </b><br/><span><span style=\"padding-left: 25px;\"><b>reference: </b><span>Library/library-SupplementalDataElements-FHIR3-1.0.0</span></span></span></p></td></tr><tr style=\"vertical-align: top;\"><th rowspan=\"7\" scope=\"row\"><b>Data Requirements: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Encounter</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>type</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.424</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Patient</span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>ProcedureRequest</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>code</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://cts.nlm.nih.gov/fhir/ValueSet/1.3.6.1.4.1.33895.1.3.0.45</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Procedure</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>code</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://cts.nlm.nih.gov/fhir/ValueSet/1.3.6.1.4.1.33895.1.3.0.45</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>MedicationRequest</span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>MedicationRequest</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>medication</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.201</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>MedicationRequest</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>medication</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1110.39</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><th scope=\"row\"><b>Content: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\"><b>type: </b><span>text/cql</span></td></tr><tr><td colspan=\"2\" style=\"padding-left: 25px; padding-right: 25px;\"><pre><code class=\"language-cql\">library EXM104_FHIR3 version '8.1.000'\n\n/*\nBased on CMS104v8 - Discharged on Antithrombotic Therapy\nAuthor: TJC\nSTK 2\n*/\n\nusing FHIR version '3.0.0'\n\ninclude FHIRHelpers version '3.0.0'\ninclude MATGlobalCommonFunctions_FHIR3 version '4.0.000' called Global\ninclude TJCOverall_FHIR3 version '3.6.000' called TJC\ninclude SupplementalDataElements_FHIR3 version '1.0.0' called SDE\n\ncodesystem &quot;LOINC&quot;: 'http://loinc.org'\ncodesystem &quot;SNOMEDCT&quot;: 'http://snomed.info/sct/731000124108'\ncodesystem &quot;Diagnosis Role&quot;: 'http://hl7.org/fhir/diagnosis-role'\ncodesystem &quot;RequestIntent&quot;: 'http://hl7.org/fhir/request-intent'\n// NOTE: This is an R4 code system\ncodesystem &quot;MedicationRequestCategory&quot;: 'http://terminology.hl7.org/CodeSystem/medicationrequest-category'\n\nvalueset &quot;Antithrombotic Therapy&quot;: 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.201'\nvalueset &quot;Comfort Measures&quot;: 'http://cts.nlm.nih.gov/fhir/ValueSet/1.3.6.1.4.1.33895.1.3.0.45'\nvalueset &quot;Discharge To Acute Care Facility&quot;: 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.87'\nvalueset &quot;Discharged to Health Care Facility for Hospice Care&quot;: 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.207'\nvalueset &quot;Discharged to Home for Hospice Care&quot;: 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.209'\nvalueset &quot;Emergency Department Visit&quot;: 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.292'\nvalueset &quot;Ethnicity&quot;: 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.114222.4.11.837'\nvalueset &quot;Hemorrhagic Stroke&quot;: 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.212'\nvalueset &quot;Ischemic Stroke&quot;: 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.247'\nvalueset &quot;Left Against Medical Advice&quot;: 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.308'\nvalueset &quot;Medical Reason&quot;: 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.473'\nvalueset &quot;Non-Elective Inpatient Encounter&quot;: 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.424'\nvalueset &quot;Observation Services&quot;: 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1111.143'\nvalueset &quot;ONC Administrative Sex&quot;: 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1'\nvalueset &quot;Patient Expired&quot;: 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.309'\nvalueset &quot;Patient Refusal&quot;: 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.93'\nvalueset &quot;Payer&quot;: 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.114222.4.11.3591'\nvalueset &quot;Race&quot;: 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.114222.4.11.836'\nvalueset &quot;Ticagrelor Therapy&quot;: 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1110.39'\n\ncode &quot;Birth date&quot;: '21112-8' from &quot;LOINC&quot; display 'Birth date'\n\n// NOTE: This is an R4 code\ncode &quot;Discharge&quot;: 'discharge' from &quot;MedicationRequestCategory&quot; display 'Discharge'\n\nparameter &quot;Measurement Period&quot; Interval&lt;DateTime&gt;\n  default Interval[@2019-01-01T00:00:00.0, @2020-01-01T00:00:00.0)\n\ncontext Patient\n\ndefine &quot;SDE Ethnicity&quot;:\n  SDE.&quot;SDE Ethnicity&quot;\n\ndefine &quot;SDE Payer&quot;:\n\tSDE.&quot;SDE Payer&quot;\n\ndefine &quot;SDE Race&quot;:\n  SDE.&quot;SDE Race&quot;\n\ndefine &quot;SDE Sex&quot;:\n\tSDE.&quot;SDE Sex&quot;\n\ndefine &quot;Initial Population&quot;:\n\tTJC.&quot;Encounter with Principal Diagnosis and Age&quot;\n\n  define &quot;Encounter with Principal Diagnosis and Age&quot;:\n  \t&quot;All Stroke Encounter&quot; AllStrokeEncounter\n  \t\twith [&quot;Patient&quot;] BirthDate\n  \t\t\tsuch that AgeInYearsAt(AllStrokeEncounter.period.start) &gt;= 18\n\n        define &quot;All Stroke Encounter&quot;:\n        \t&quot;Non Elective Inpatient Encounter&quot; NonElectiveEncounter\n        \t\twhere Global.PrincipalDiagnosis(NonElectiveEncounter).code in &quot;Hemorrhagic Stroke&quot;\n        \t\tor Global.PrincipalDiagnosis(NonElectiveEncounter).code in &quot;Ischemic Stroke&quot;\n\n            define &quot;Non Elective Inpatient Encounter&quot;:\n            \t[&quot;Encounter&quot;: &quot;Non-Elective Inpatient Encounter&quot;] NonElectiveEncounter\n            \t\twhere Global.&quot;LengthInDays&quot;(NonElectiveEncounter.period)&lt;= 120\n            \t\t\tand NonElectiveEncounter.period ends during &quot;Measurement Period&quot;\n\ndefine &quot;Denominator&quot;:\n\tTJC.&quot;Ischemic Stroke Encounter&quot;\n\n  define &quot;Ischemic Stroke Encounter&quot;:\n  \t&quot;Encounter with Principal Diagnosis and Age&quot; EncounterWithAge\n  \t\twhere Global.PrincipalDiagnosis(EncounterWithAge).code in &quot;Ischemic Stroke&quot;\n\ndefine &quot;Denominator Exclusion&quot;:\n\tTJC.&quot;Ischemic Stroke Encounters with Discharge Disposition&quot;\n\t\tunion TJC.&quot;Comfort Measures during Hospitalization&quot;\n\n    define &quot;Ischemic Stroke Encounters with Discharge Disposition&quot;:\n    \t( ( &quot;Ischemic Stroke Encounter&quot; IschemicStrokeEncounter\n    \t\t\t\twhere IschemicStrokeEncounter.hospitalization.dischargeDisposition in &quot;Discharge To Acute Care Facility&quot;\n    \t\t\t\t\tor IschemicStrokeEncounter.hospitalization.dischargeDisposition in &quot;Left Against Medical Advice&quot;\n    \t\t\t\t\tor IschemicStrokeEncounter.hospitalization.dischargeDisposition in &quot;Patient Expired&quot;\n    \t\t\t\t\tor IschemicStrokeEncounter.hospitalization.dischargeDisposition in &quot;Discharged to Home for Hospice Care&quot;\n    \t\t\t\t\tor IschemicStrokeEncounter.hospitalization.dischargeDisposition in &quot;Discharged to Health Care Facility for Hospice Care&quot;\n    \t\t)\n    \t)\n\n    define &quot;Comfort Measures during Hospitalization&quot;:\n    \t&quot;Ischemic Stroke Encounter&quot; IschemicStrokeEncounter\n    \t\twith &quot;Intervention Comfort Measures&quot; ComfortMeasure\n    \t\t\tsuch that Coalesce(start of ComfortMeasure.performed, ComfortMeasure.authoredOn)during Global.&quot;HospitalizationWithObservation&quot;(IschemicStrokeEncounter)\n\n          define &quot;Intervention Comfort Measures&quot;:\n          \t([&quot;ProcedureRequest&quot;: &quot;Comfort Measures&quot;] P\n          \t\twhere P.intent = 'order')\n          \t\tunion\n          \t\t([&quot;Procedure&quot;: &quot;Comfort Measures&quot;] IntervetionPerformed\n          \t\twhere IntervetionPerformed.status = 'completed')\n\ndefine &quot;Numerator&quot;:\n\tTJC.&quot;Ischemic Stroke Encounter&quot; IschemicStrokeEncounter\n\t\twith &quot;Antithrombotic Therapy at Discharge&quot; DischargeAntithrombotic\n\t\t\tsuch that DischargeAntithrombotic.authoredOn during IschemicStrokeEncounter.period\n\n      define &quot;Antithrombotic Therapy at Discharge&quot;:\n      \t//The following should work, but it's pending a fix in the CQL Engine, ref https://github.com/DBCG/cql_engine/issues/271.\n        //[&quot;MedicationRequest&quot;: &quot;Antithrombotic Therapy&quot;] Antithrombotic\n        //where Antithrombotic.intent = 'order'\n        \n        //Temporarily using the following until the fix is available.\n        [&quot;MedicationRequest&quot;] Antithrombotic\n            where (Antithrombotic.medication as CodeableConcept) in &quot;Antithrombotic Therapy&quot;\n      \t    and Antithrombotic.intent = 'order'\n\ndefine &quot;Denominator Exceptions&quot;:\n\t&quot;Encounter With No Antithrombotic At Discharge&quot;\n\t\tunion &quot;Encounter With Ticagrelor at Discharge&quot;\n\n    define &quot;Encounter With No Antithrombotic At Discharge&quot;:\n    \tTJC.&quot;Ischemic Stroke Encounter&quot; IschemicStrokeEncounter\n    \t\twith &quot;Antithrombotic Not Given at Discharge&quot; NoDischargeAntithrombotic\n    \t\t\tsuch that NoDischargeAntithrombotic.authoredOn during IschemicStrokeEncounter.period\n\n          define &quot;Antithrombotic Not Given at Discharge&quot;:\n          \t[&quot;MedicationRequest&quot;: &quot;Antithrombotic Therapy&quot;] NoAntithromboticDischarge\n          \t  // STU3\n          \t\twhere exists (NoAntithromboticDischarge.extension E where E.url = 'http://hl7.org/fhir/us/davinci-deqm/STU3/StructureDefinition/extension-doNotPerform' and E.value is true)\n          \t\t// R4\n          \t\t//where NoAntithromboticDischarge.doNotPerform is true\n          \t\t\tand (singleton from NoAntithromboticDischarge.reasonCode in &quot;Medical Reason&quot;\n          \t\t\t\tor singleton from NoAntithromboticDischarge.reasonCode in &quot;Patient Refusal&quot;)\n\n          // NOTE: On the assumption that status of not-taken is the closest to what the measure is looking for, this is the expression:\n          // TODO: Request discussion w/ Pharmacy regarding how medications not prescribed at discharged would be documented\n          //define &quot;Antithrombotic Not Given at Discharge R4&quot;:\n          //  [&quot;MedicationStatement&quot;: &quot;Antithrombotic Therapy&quot;] AntithromboticTherapy\n          //\t  where AntithromboticTherapy.status = 'not-taken'\n          //\t\t  and (AntithromboticTherapy.statusReason in &quot;Medical Reason&quot;\n          //\t\t\t\tor AntithrombtoicTherapy.statusReason in &quot;Patient Refusal&quot;)\n\n          // If it's documented as a checkbox, it may be represented as an observation\n          //define &quot;Antithrombotic Not Given at Discharge (Observation)&quot;:\n          //  [&quot;Observation&quot;: &quot;Medication Not Given At Discharge&quot;] O\n          //\t  where O.value in &quot;Antithrombotic Therapy&quot;\n\n      /*\n      define &quot;Encounter With Ticagrelor During Hospitalization&quot;:\n      \tTJC.&quot;Ischemic Stroke Encounter&quot; IschemicStrokeEncounter\n      \t\twith [&quot;MedicationAdministration&quot;: medication in TJC.&quot;Ticagrelor Therapy&quot;] Ticagrelor\n      \t\t\tsuch that Ticagrelor.effective starts during Global.&quot;HospitalizationWithObservation&quot;(IschemicStrokeEncounter)\n      */\n      //Looking for Ticagrelor as discharge medication, include a corrected defintion in 2021 CQL based measure\n      define &quot;Encounter With Ticagrelor at Discharge&quot;:\n        TJC.&quot;Ischemic Stroke Encounter&quot; IschemicStrokeEncounter\n          with &quot;Ticagrelor Therapy at Discharge&quot; DischargeTicagrelor\n            such that DischargeTicagrelor.authoredOn during IschemicStrokeEncounter.period\n\n            define &quot;Ticagrelor Therapy at Discharge&quot;:\n              [&quot;MedicationRequest&quot;: medication in TJC.&quot;Ticagrelor Therapy&quot;] Ticagrelor\n                where (Ticagrelor.medication as CodeableConcept) in TJC.&quot;Ticagrelor Therapy&quot;\n                  and Ticagrelor.intent = 'order'\n</code></pre>\n                    \n                    \n                </td>\n            </tr>\n        \n    </table>\n</div>"
  },
  "version": "8.1.000",
  "name": "EXM104_FHIR3",
  "status": "active",
  "experimental": true,
  "type": {
    "coding": [
      {
        "system": "http://hl7.org/fhir/library-type",
        "code": "logic-library"
      }
    ]
  },
  "relatedArtifact": [
    {
      "type": "depends-on",
      "resource": {
        "reference": "Library/library-FHIRHelpers-3.0.0"
      }
    },
    {
      "type": "depends-on",
      "resource": {
        "reference": "Library/library-MATGlobalCommonFunctions-FHIR3-4.0.000"
      }
    },
    {
      "type": "depends-on",
      "resource": {
        "reference": "Library/library-TJCOverall-FHIR3-3.6.000"
      }
    },
    {
      "type": "depends-on",
      "resource": {
        "reference": "Library/library-SupplementalDataElements-FHIR3-1.0.0"
      }
    }
  ],
  "dataRequirement": [
    {
      "type": "Encounter",
      "codeFilter": [
        {
          "path": "type",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.424"
        }
      ]
    },
    {
      "type": "Patient"
    },
    {
      "type": "ProcedureRequest",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/1.3.6.1.4.1.33895.1.3.0.45"
        }
      ]
    },
    {
      "type": "Procedure",
      "codeFilter": [
        {
          "path": "code",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/1.3.6.1.4.1.33895.1.3.0.45"
        }
      ]
    },
    {
      "type": "MedicationRequest"
    },
    {
      "type": "MedicationRequest",
      "codeFilter": [
        {
          "path": "medication",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.201"
        }
      ]
    },
    {
      "type": "MedicationRequest",
      "codeFilter": [
        {
          "path": "medication",
          "valueSetString": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113762.1.4.1110.39"
        }
      ]
    }
  ],
  "content": [
    {
      "contentType": "application/elm+xml",
      "data": ""
    },
    {
      "contentType": "text/cql",
      "data": "bGlicmFyeSBFWE0xMDRfRkhJUjMgdmVyc2lvbiAnOC4xLjAwMCcKCi8qCkJhc2VkIG9uIENNUzEwNHY4IC0gRGlzY2hhcmdlZCBvbiBBbnRpdGhyb21ib3RpYyBUaGVyYXB5CkF1dGhvcjogVEpDClNUSyAyCiovCgp1c2luZyBGSElSIHZlcnNpb24gJzMuMC4wJwoKaW5jbHVkZSBGSElSSGVscGVycyB2ZXJzaW9uICczLjAuMCcKaW5jbHVkZSBNQVRHbG9iYWxDb21tb25GdW5jdGlvbnNfRkhJUjMgdmVyc2lvbiAnNC4wLjAwMCcgY2FsbGVkIEdsb2JhbAppbmNsdWRlIFRKQ092ZXJhbGxfRkhJUjMgdmVyc2lvbiAnMy42LjAwMCcgY2FsbGVkIFRKQwppbmNsdWRlIFN1cHBsZW1lbnRhbERhdGFFbGVtZW50c19GSElSMyB2ZXJzaW9uICcxLjAuMCcgY2FsbGVkIFNERQoKY29kZXN5c3RlbSAiTE9JTkMiOiAnaHR0cDovL2xvaW5jLm9yZycKY29kZXN5c3RlbSAiU05PTUVEQ1QiOiAnaHR0cDovL3Nub21lZC5pbmZvL3NjdC83MzEwMDAxMjQxMDgnCmNvZGVzeXN0ZW0gIkRpYWdub3NpcyBSb2xlIjogJ2h0dHA6Ly9obDcub3JnL2ZoaXIvZGlhZ25vc2lzLXJvbGUnCmNvZGVzeXN0ZW0gIlJlcXVlc3RJbnRlbnQiOiAnaHR0cDovL2hsNy5vcmcvZmhpci9yZXF1ZXN0LWludGVudCcKLy8gTk9URTogVGhpcyBpcyBhbiBSNCBjb2RlIHN5c3RlbQpjb2Rlc3lzdGVtICJNZWRpY2F0aW9uUmVxdWVzdENhdGVnb3J5IjogJ2h0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vbWVkaWNhdGlvbnJlcXVlc3QtY2F0ZWdvcnknCgp2YWx1ZXNldCAiQW50aXRocm9tYm90aWMgVGhlcmFweSI6ICdodHRwOi8vY3RzLm5sbS5uaWguZ292L2ZoaXIvVmFsdWVTZXQvMi4xNi44NDAuMS4xMTM4ODMuMy4xMTcuMS43LjEuMjAxJwp2YWx1ZXNldCAiQ29tZm9ydCBNZWFzdXJlcyI6ICdodHRwOi8vY3RzLm5sbS5uaWguZ292L2ZoaXIvVmFsdWVTZXQvMS4zLjYuMS40LjEuMzM4OTUuMS4zLjAuNDUnCnZhbHVlc2V0ICJEaXNjaGFyZ2UgVG8gQWN1dGUgQ2FyZSBGYWNpbGl0eSI6ICdodHRwOi8vY3RzLm5sbS5uaWguZ292L2ZoaXIvVmFsdWVTZXQvMi4xNi44NDAuMS4xMTM4ODMuMy4xMTcuMS43LjEuODcnCnZhbHVlc2V0ICJEaXNjaGFyZ2VkIHRvIEhlYWx0aCBDYXJlIEZhY2lsaXR5IGZvciBIb3NwaWNlIENhcmUiOiAnaHR0cDovL2N0cy5ubG0ubmloLmdvdi9maGlyL1ZhbHVlU2V0LzIuMTYuODQwLjEuMTEzODgzLjMuMTE3LjEuNy4xLjIwNycKdmFsdWVzZXQgIkRpc2NoYXJnZWQgdG8gSG9tZSBmb3IgSG9zcGljZSBDYXJlIjogJ2h0dHA6Ly9jdHMubmxtLm5paC5nb3YvZmhpci9WYWx1ZVNldC8yLjE2Ljg0MC4xLjExMzg4My4zLjExNy4xLjcuMS4yMDknCnZhbHVlc2V0ICJFbWVyZ2VuY3kgRGVwYXJ0bWVudCBWaXNpdCI6ICdodHRwOi8vY3RzLm5sbS5uaWguZ292L2ZoaXIvVmFsdWVTZXQvMi4xNi44NDAuMS4xMTM4ODMuMy4xMTcuMS43LjEuMjkyJwp2YWx1ZXNldCAiRXRobmljaXR5IjogJ2h0dHA6Ly9jdHMubmxtLm5paC5nb3YvZmhpci9WYWx1ZVNldC8yLjE2Ljg0MC4xLjExNDIyMi40LjExLjgzNycKdmFsdWVzZXQgIkhlbW9ycmhhZ2ljIFN0cm9rZSI6ICdodHRwOi8vY3RzLm5sbS5uaWguZ292L2ZoaXIvVmFsdWVTZXQvMi4xNi44NDAuMS4xMTM4ODMuMy4xMTcuMS43LjEuMjEyJwp2YWx1ZXNldCAiSXNjaGVtaWMgU3Ryb2tlIjogJ2h0dHA6Ly9jdHMubmxtLm5paC5nb3YvZmhpci9WYWx1ZVNldC8yLjE2Ljg0MC4xLjExMzg4My4zLjExNy4xLjcuMS4yNDcnCnZhbHVlc2V0ICJMZWZ0IEFnYWluc3QgTWVkaWNhbCBBZHZpY2UiOiAnaHR0cDovL2N0cy5ubG0ubmloLmdvdi9maGlyL1ZhbHVlU2V0LzIuMTYuODQwLjEuMTEzODgzLjMuMTE3LjEuNy4xLjMwOCcKdmFsdWVzZXQgIk1lZGljYWwgUmVhc29uIjogJ2h0dHA6Ly9jdHMubmxtLm5paC5nb3YvZmhpci9WYWx1ZVNldC8yLjE2Ljg0MC4xLjExMzg4My4zLjExNy4xLjcuMS40NzMnCnZhbHVlc2V0ICJOb24tRWxlY3RpdmUgSW5wYXRpZW50IEVuY291bnRlciI6ICdodHRwOi8vY3RzLm5sbS5uaWguZ292L2ZoaXIvVmFsdWVTZXQvMi4xNi44NDAuMS4xMTM4ODMuMy4xMTcuMS43LjEuNDI0Jwp2YWx1ZXNldCAiT2JzZXJ2YXRpb24gU2VydmljZXMiOiAnaHR0cDovL2N0cy5ubG0ubmloLmdvdi9maGlyL1ZhbHVlU2V0LzIuMTYuODQwLjEuMTEzNzYyLjEuNC4xMTExLjE0MycKdmFsdWVzZXQgIk9OQyBBZG1pbmlzdHJhdGl2ZSBTZXgiOiAnaHR0cDovL2N0cy5ubG0ubmloLmdvdi9maGlyL1ZhbHVlU2V0LzIuMTYuODQwLjEuMTEzNzYyLjEuNC4xJwp2YWx1ZXNldCAiUGF0aWVudCBFeHBpcmVkIjogJ2h0dHA6Ly9jdHMubmxtLm5paC5nb3YvZmhpci9WYWx1ZVNldC8yLjE2Ljg0MC4xLjExMzg4My4zLjExNy4xLjcuMS4zMDknCnZhbHVlc2V0ICJQYXRpZW50IFJlZnVzYWwiOiAnaHR0cDovL2N0cy5ubG0ubmloLmdvdi9maGlyL1ZhbHVlU2V0LzIuMTYuODQwLjEuMTEzODgzLjMuMTE3LjEuNy4xLjkzJwp2YWx1ZXNldCAiUGF5ZXIiOiAnaHR0cDovL2N0cy5ubG0ubmloLmdvdi9maGlyL1ZhbHVlU2V0LzIuMTYuODQwLjEuMTE0MjIyLjQuMTEuMzU5MScKdmFsdWVzZXQgIlJhY2UiOiAnaHR0cDovL2N0cy5ubG0ubmloLmdvdi9maGlyL1ZhbHVlU2V0LzIuMTYuODQwLjEuMTE0MjIyLjQuMTEuODM2Jwp2YWx1ZXNldCAiVGljYWdyZWxvciBUaGVyYXB5IjogJ2h0dHA6Ly9jdHMubmxtLm5paC5nb3YvZmhpci9WYWx1ZVNldC8yLjE2Ljg0MC4xLjExMzc2Mi4xLjQuMTExMC4zOScKCmNvZGUgIkJpcnRoIGRhdGUiOiAnMjExMTItOCcgZnJvbSAiTE9JTkMiIGRpc3BsYXkgJ0JpcnRoIGRhdGUnCgovLyBOT1RFOiBUaGlzIGlzIGFuIFI0IGNvZGUKY29kZSAiRGlzY2hhcmdlIjogJ2Rpc2NoYXJnZScgZnJvbSAiTWVkaWNhdGlvblJlcXVlc3RDYXRlZ29yeSIgZGlzcGxheSAnRGlzY2hhcmdlJwoKcGFyYW1ldGVyICJNZWFzdXJlbWVudCBQZXJpb2QiIEludGVydmFsPERhdGVUaW1lPgogIGRlZmF1bHQgSW50ZXJ2YWxbQDIwMTktMDEtMDFUMDA6MDA6MDAuMCwgQDIwMjAtMDEtMDFUMDA6MDA6MDAuMCkKCmNvbnRleHQgUGF0aWVudAoKZGVmaW5lICJTREUgRXRobmljaXR5IjoKICBTREUuIlNERSBFdGhuaWNpdHkiCgpkZWZpbmUgIlNERSBQYXllciI6CglTREUuIlNERSBQYXllciIKCmRlZmluZSAiU0RFIFJhY2UiOgogIFNERS4iU0RFIFJhY2UiCgpkZWZpbmUgIlNERSBTZXgiOgoJU0RFLiJTREUgU2V4IgoKZGVmaW5lICJJbml0aWFsIFBvcHVsYXRpb24iOgoJVEpDLiJFbmNvdW50ZXIgd2l0aCBQcmluY2lwYWwgRGlhZ25vc2lzIGFuZCBBZ2UiCgogIGRlZmluZSAiRW5jb3VudGVyIHdpdGggUHJpbmNpcGFsIERpYWdub3NpcyBhbmQgQWdlIjoKICAJIkFsbCBTdHJva2UgRW5jb3VudGVyIiBBbGxTdHJva2VFbmNvdW50ZXIKICAJCXdpdGggWyJQYXRpZW50Il0gQmlydGhEYXRlCiAgCQkJc3VjaCB0aGF0IEFnZUluWWVhcnNBdChBbGxTdHJva2VFbmNvdW50ZXIucGVyaW9kLnN0YXJ0KSA+PSAxOAoKICAgICAgICBkZWZpbmUgIkFsbCBTdHJva2UgRW5jb3VudGVyIjoKICAgICAgICAJIk5vbiBFbGVjdGl2ZSBJbnBhdGllbnQgRW5jb3VudGVyIiBOb25FbGVjdGl2ZUVuY291bnRlcgogICAgICAgIAkJd2hlcmUgR2xvYmFsLlByaW5jaXBhbERpYWdub3NpcyhOb25FbGVjdGl2ZUVuY291bnRlcikuY29kZSBpbiAiSGVtb3JyaGFnaWMgU3Ryb2tlIgogICAgICAgIAkJb3IgR2xvYmFsLlByaW5jaXBhbERpYWdub3NpcyhOb25FbGVjdGl2ZUVuY291bnRlcikuY29kZSBpbiAiSXNjaGVtaWMgU3Ryb2tlIgoKICAgICAgICAgICAgZGVmaW5lICJOb24gRWxlY3RpdmUgSW5wYXRpZW50IEVuY291bnRlciI6CiAgICAgICAgICAgIAlbIkVuY291bnRlciI6ICJOb24tRWxlY3RpdmUgSW5wYXRpZW50IEVuY291bnRlciJdIE5vbkVsZWN0aXZlRW5jb3VudGVyCiAgICAgICAgICAgIAkJd2hlcmUgR2xvYmFsLiJMZW5ndGhJbkRheXMiKE5vbkVsZWN0aXZlRW5jb3VudGVyLnBlcmlvZCk8PSAxMjAKICAgICAgICAgICAgCQkJYW5kIE5vbkVsZWN0aXZlRW5jb3VudGVyLnBlcmlvZCBlbmRzIGR1cmluZyAiTWVhc3VyZW1lbnQgUGVyaW9kIgoKZGVmaW5lICJEZW5vbWluYXRvciI6CglUSkMuIklzY2hlbWljIFN0cm9rZSBFbmNvdW50ZXIiCgogIGRlZmluZSAiSXNjaGVtaWMgU3Ryb2tlIEVuY291bnRlciI6CiAgCSJFbmNvdW50ZXIgd2l0aCBQcmluY2lwYWwgRGlhZ25vc2lzIGFuZCBBZ2UiIEVuY291bnRlcldpdGhBZ2UKICAJCXdoZXJlIEdsb2JhbC5QcmluY2lwYWxEaWFnbm9zaXMoRW5jb3VudGVyV2l0aEFnZSkuY29kZSBpbiAiSXNjaGVtaWMgU3Ryb2tlIgoKZGVmaW5lICJEZW5vbWluYXRvciBFeGNsdXNpb24iOgoJVEpDLiJJc2NoZW1pYyBTdHJva2UgRW5jb3VudGVycyB3aXRoIERpc2NoYXJnZSBEaXNwb3NpdGlvbiIKCQl1bmlvbiBUSkMuIkNvbWZvcnQgTWVhc3VyZXMgZHVyaW5nIEhvc3BpdGFsaXphdGlvbiIKCiAgICBkZWZpbmUgIklzY2hlbWljIFN0cm9rZSBFbmNvdW50ZXJzIHdpdGggRGlzY2hhcmdlIERpc3Bvc2l0aW9uIjoKICAgIAkoICggIklzY2hlbWljIFN0cm9rZSBFbmNvdW50ZXIiIElzY2hlbWljU3Ryb2tlRW5jb3VudGVyCiAgICAJCQkJd2hlcmUgSXNjaGVtaWNTdHJva2VFbmNvdW50ZXIuaG9zcGl0YWxpemF0aW9uLmRpc2NoYXJnZURpc3Bvc2l0aW9uIGluICJEaXNjaGFyZ2UgVG8gQWN1dGUgQ2FyZSBGYWNpbGl0eSIKICAgIAkJCQkJb3IgSXNjaGVtaWNTdHJva2VFbmNvdW50ZXIuaG9zcGl0YWxpemF0aW9uLmRpc2NoYXJnZURpc3Bvc2l0aW9uIGluICJMZWZ0IEFnYWluc3QgTWVkaWNhbCBBZHZpY2UiCiAgICAJCQkJCW9yIElzY2hlbWljU3Ryb2tlRW5jb3VudGVyLmhvc3BpdGFsaXphdGlvbi5kaXNjaGFyZ2VEaXNwb3NpdGlvbiBpbiAiUGF0aWVudCBFeHBpcmVkIgogICAgCQkJCQlvciBJc2NoZW1pY1N0cm9rZUVuY291bnRlci5ob3NwaXRhbGl6YXRpb24uZGlzY2hhcmdlRGlzcG9zaXRpb24gaW4gIkRpc2NoYXJnZWQgdG8gSG9tZSBmb3IgSG9zcGljZSBDYXJlIgogICAgCQkJCQlvciBJc2NoZW1pY1N0cm9rZUVuY291bnRlci5ob3NwaXRhbGl6YXRpb24uZGlzY2hhcmdlRGlzcG9zaXRpb24gaW4gIkRpc2NoYXJnZWQgdG8gSGVhbHRoIENhcmUgRmFjaWxpdHkgZm9yIEhvc3BpY2UgQ2FyZSIKICAgIAkJKQogICAgCSkKCiAgICBkZWZpbmUgIkNvbWZvcnQgTWVhc3VyZXMgZHVyaW5nIEhvc3BpdGFsaXphdGlvbiI6CiAgICAJIklzY2hlbWljIFN0cm9rZSBFbmNvdW50ZXIiIElzY2hlbWljU3Ryb2tlRW5jb3VudGVyCiAgICAJCXdpdGggIkludGVydmVudGlvbiBDb21mb3J0IE1lYXN1cmVzIiBDb21mb3J0TWVhc3VyZQogICAgCQkJc3VjaCB0aGF0IENvYWxlc2NlKHN0YXJ0IG9mIENvbWZvcnRNZWFzdXJlLnBlcmZvcm1lZCwgQ29tZm9ydE1lYXN1cmUuYXV0aG9yZWRPbilkdXJpbmcgR2xvYmFsLiJIb3NwaXRhbGl6YXRpb25XaXRoT2JzZXJ2YXRpb24iKElzY2hlbWljU3Ryb2tlRW5jb3VudGVyKQoKICAgICAgICAgIGRlZmluZSAiSW50ZXJ2ZW50aW9uIENvbWZvcnQgTWVhc3VyZXMiOgogICAgICAgICAgCShbIlByb2NlZHVyZVJlcXVlc3QiOiAiQ29tZm9ydCBNZWFzdXJlcyJdIFAKICAgICAgICAgIAkJd2hlcmUgUC5pbnRlbnQgPSAnb3JkZXInKQogICAgICAgICAgCQl1bmlvbgogICAgICAgICAgCQkoWyJQcm9jZWR1cmUiOiAiQ29tZm9ydCBNZWFzdXJlcyJdIEludGVydmV0aW9uUGVyZm9ybWVkCiAgICAgICAgICAJCXdoZXJlIEludGVydmV0aW9uUGVyZm9ybWVkLnN0YXR1cyA9ICdjb21wbGV0ZWQnKQoKZGVmaW5lICJOdW1lcmF0b3IiOgoJVEpDLiJJc2NoZW1pYyBTdHJva2UgRW5jb3VudGVyIiBJc2NoZW1pY1N0cm9rZUVuY291bnRlcgoJCXdpdGggIkFudGl0aHJvbWJvdGljIFRoZXJhcHkgYXQgRGlzY2hhcmdlIiBEaXNjaGFyZ2VBbnRpdGhyb21ib3RpYwoJCQlzdWNoIHRoYXQgRGlzY2hhcmdlQW50aXRocm9tYm90aWMuYXV0aG9yZWRPbiBkdXJpbmcgSXNjaGVtaWNTdHJva2VFbmNvdW50ZXIucGVyaW9kCgogICAgICBkZWZpbmUgIkFudGl0aHJvbWJvdGljIFRoZXJhcHkgYXQgRGlzY2hhcmdlIjoKICAgICAgCS8vVGhlIGZvbGxvd2luZyBzaG91bGQgd29yaywgYnV0IGl0J3MgcGVuZGluZyBhIGZpeCBpbiB0aGUgQ1FMIEVuZ2luZSwgcmVmIGh0dHBzOi8vZ2l0aHViLmNvbS9EQkNHL2NxbF9lbmdpbmUvaXNzdWVzLzI3MS4KICAgICAgICAvL1siTWVkaWNhdGlvblJlcXVlc3QiOiAiQW50aXRocm9tYm90aWMgVGhlcmFweSJdIEFudGl0aHJvbWJvdGljCiAgICAgICAgLy93aGVyZSBBbnRpdGhyb21ib3RpYy5pbnRlbnQgPSAnb3JkZXInCiAgICAgICAgCiAgICAgICAgLy9UZW1wb3JhcmlseSB1c2luZyB0aGUgZm9sbG93aW5nIHVudGlsIHRoZSBmaXggaXMgYXZhaWxhYmxlLgogICAgICAgIFsiTWVkaWNhdGlvblJlcXVlc3QiXSBBbnRpdGhyb21ib3RpYwogICAgICAgICAgICB3aGVyZSAoQW50aXRocm9tYm90aWMubWVkaWNhdGlvbiBhcyBDb2RlYWJsZUNvbmNlcHQpIGluICJBbnRpdGhyb21ib3RpYyBUaGVyYXB5IgogICAgICAJICAgIGFuZCBBbnRpdGhyb21ib3RpYy5pbnRlbnQgPSAnb3JkZXInCgpkZWZpbmUgIkRlbm9taW5hdG9yIEV4Y2VwdGlvbnMiOgoJIkVuY291bnRlciBXaXRoIE5vIEFudGl0aHJvbWJvdGljIEF0IERpc2NoYXJnZSIKCQl1bmlvbiAiRW5jb3VudGVyIFdpdGggVGljYWdyZWxvciBhdCBEaXNjaGFyZ2UiCgogICAgZGVmaW5lICJFbmNvdW50ZXIgV2l0aCBObyBBbnRpdGhyb21ib3RpYyBBdCBEaXNjaGFyZ2UiOgogICAgCVRKQy4iSXNjaGVtaWMgU3Ryb2tlIEVuY291bnRlciIgSXNjaGVtaWNTdHJva2VFbmNvdW50ZXIKICAgIAkJd2l0aCAiQW50aXRocm9tYm90aWMgTm90IEdpdmVuIGF0IERpc2NoYXJnZSIgTm9EaXNjaGFyZ2VBbnRpdGhyb21ib3RpYwogICAgCQkJc3VjaCB0aGF0IE5vRGlzY2hhcmdlQW50aXRocm9tYm90aWMuYXV0aG9yZWRPbiBkdXJpbmcgSXNjaGVtaWNTdHJva2VFbmNvdW50ZXIucGVyaW9kCgogICAgICAgICAgZGVmaW5lICJBbnRpdGhyb21ib3RpYyBOb3QgR2l2ZW4gYXQgRGlzY2hhcmdlIjoKICAgICAgICAgIAlbIk1lZGljYXRpb25SZXF1ZXN0IjogIkFudGl0aHJvbWJvdGljIFRoZXJhcHkiXSBOb0FudGl0aHJvbWJvdGljRGlzY2hhcmdlCiAgICAgICAgICAJICAvLyBTVFUzCiAgICAgICAgICAJCXdoZXJlIGV4aXN0cyAoTm9BbnRpdGhyb21ib3RpY0Rpc2NoYXJnZS5leHRlbnNpb24gRSB3aGVyZSBFLnVybCA9ICdodHRwOi8vaGw3Lm9yZy9maGlyL3VzL2RhdmluY2ktZGVxbS9TVFUzL1N0cnVjdHVyZURlZmluaXRpb24vZXh0ZW5zaW9uLWRvTm90UGVyZm9ybScgYW5kIEUudmFsdWUgaXMgdHJ1ZSkKICAgICAgICAgIAkJLy8gUjQKICAgICAgICAgIAkJLy93aGVyZSBOb0FudGl0aHJvbWJvdGljRGlzY2hhcmdlLmRvTm90UGVyZm9ybSBpcyB0cnVlCiAgICAgICAgICAJCQlhbmQgKHNpbmdsZXRvbiBmcm9tIE5vQW50aXRocm9tYm90aWNEaXNjaGFyZ2UucmVhc29uQ29kZSBpbiAiTWVkaWNhbCBSZWFzb24iCiAgICAgICAgICAJCQkJb3Igc2luZ2xldG9uIGZyb20gTm9BbnRpdGhyb21ib3RpY0Rpc2NoYXJnZS5yZWFzb25Db2RlIGluICJQYXRpZW50IFJlZnVzYWwiKQoKICAgICAgICAgIC8vIE5PVEU6IE9uIHRoZSBhc3N1bXB0aW9uIHRoYXQgc3RhdHVzIG9mIG5vdC10YWtlbiBpcyB0aGUgY2xvc2VzdCB0byB3aGF0IHRoZSBtZWFzdXJlIGlzIGxvb2tpbmcgZm9yLCB0aGlzIGlzIHRoZSBleHByZXNzaW9uOgogICAgICAgICAgLy8gVE9ETzogUmVxdWVzdCBkaXNjdXNzaW9uIHcvIFBoYXJtYWN5IHJlZ2FyZGluZyBob3cgbWVkaWNhdGlvbnMgbm90IHByZXNjcmliZWQgYXQgZGlzY2hhcmdlZCB3b3VsZCBiZSBkb2N1bWVudGVkCiAgICAgICAgICAvL2RlZmluZSAiQW50aXRocm9tYm90aWMgTm90IEdpdmVuIGF0IERpc2NoYXJnZSBSNCI6CiAgICAgICAgICAvLyAgWyJNZWRpY2F0aW9uU3RhdGVtZW50IjogIkFudGl0aHJvbWJvdGljIFRoZXJhcHkiXSBBbnRpdGhyb21ib3RpY1RoZXJhcHkKICAgICAgICAgIC8vCSAgd2hlcmUgQW50aXRocm9tYm90aWNUaGVyYXB5LnN0YXR1cyA9ICdub3QtdGFrZW4nCiAgICAgICAgICAvLwkJICBhbmQgKEFudGl0aHJvbWJvdGljVGhlcmFweS5zdGF0dXNSZWFzb24gaW4gIk1lZGljYWwgUmVhc29uIgogICAgICAgICAgLy8JCQkJb3IgQW50aXRocm9tYnRvaWNUaGVyYXB5LnN0YXR1c1JlYXNvbiBpbiAiUGF0aWVudCBSZWZ1c2FsIikKCiAgICAgICAgICAvLyBJZiBpdCdzIGRvY3VtZW50ZWQgYXMgYSBjaGVja2JveCwgaXQgbWF5IGJlIHJlcHJlc2VudGVkIGFzIGFuIG9ic2VydmF0aW9uCiAgICAgICAgICAvL2RlZmluZSAiQW50aXRocm9tYm90aWMgTm90IEdpdmVuIGF0IERpc2NoYXJnZSAoT2JzZXJ2YXRpb24pIjoKICAgICAgICAgIC8vICBbIk9ic2VydmF0aW9uIjogIk1lZGljYXRpb24gTm90IEdpdmVuIEF0IERpc2NoYXJnZSJdIE8KICAgICAgICAgIC8vCSAgd2hlcmUgTy52YWx1ZSBpbiAiQW50aXRocm9tYm90aWMgVGhlcmFweSIKCiAgICAgIC8qCiAgICAgIGRlZmluZSAiRW5jb3VudGVyIFdpdGggVGljYWdyZWxvciBEdXJpbmcgSG9zcGl0YWxpemF0aW9uIjoKICAgICAgCVRKQy4iSXNjaGVtaWMgU3Ryb2tlIEVuY291bnRlciIgSXNjaGVtaWNTdHJva2VFbmNvdW50ZXIKICAgICAgCQl3aXRoIFsiTWVkaWNhdGlvbkFkbWluaXN0cmF0aW9uIjogbWVkaWNhdGlvbiBpbiBUSkMuIlRpY2FncmVsb3IgVGhlcmFweSJdIFRpY2FncmVsb3IKICAgICAgCQkJc3VjaCB0aGF0IFRpY2FncmVsb3IuZWZmZWN0aXZlIHN0YXJ0cyBkdXJpbmcgR2xvYmFsLiJIb3NwaXRhbGl6YXRpb25XaXRoT2JzZXJ2YXRpb24iKElzY2hlbWljU3Ryb2tlRW5jb3VudGVyKQogICAgICAqLwogICAgICAvL0xvb2tpbmcgZm9yIFRpY2FncmVsb3IgYXMgZGlzY2hhcmdlIG1lZGljYXRpb24sIGluY2x1ZGUgYSBjb3JyZWN0ZWQgZGVmaW50aW9uIGluIDIwMjEgQ1FMIGJhc2VkIG1lYXN1cmUKICAgICAgZGVmaW5lICJFbmNvdW50ZXIgV2l0aCBUaWNhZ3JlbG9yIGF0IERpc2NoYXJnZSI6CiAgICAgICAgVEpDLiJJc2NoZW1pYyBTdHJva2UgRW5jb3VudGVyIiBJc2NoZW1pY1N0cm9rZUVuY291bnRlcgogICAgICAgICAgd2l0aCAiVGljYWdyZWxvciBUaGVyYXB5IGF0IERpc2NoYXJnZSIgRGlzY2hhcmdlVGljYWdyZWxvcgogICAgICAgICAgICBzdWNoIHRoYXQgRGlzY2hhcmdlVGljYWdyZWxvci5hdXRob3JlZE9uIGR1cmluZyBJc2NoZW1pY1N0cm9rZUVuY291bnRlci5wZXJpb2QKCiAgICAgICAgICAgIGRlZmluZSAiVGljYWdyZWxvciBUaGVyYXB5IGF0IERpc2NoYXJnZSI6CiAgICAgICAgICAgICAgWyJNZWRpY2F0aW9uUmVxdWVzdCI6IG1lZGljYXRpb24gaW4gVEpDLiJUaWNhZ3JlbG9yIFRoZXJhcHkiXSBUaWNhZ3JlbG9yCiAgICAgICAgICAgICAgICB3aGVyZSAoVGljYWdyZWxvci5tZWRpY2F0aW9uIGFzIENvZGVhYmxlQ29uY2VwdCkgaW4gVEpDLiJUaWNhZ3JlbG9yIFRoZXJhcHkiCiAgICAgICAgICAgICAgICAgIGFuZCBUaWNhZ3JlbG9yLmludGVudCA9ICdvcmRlcicK"
    }
  ]
}